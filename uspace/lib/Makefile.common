#
# Copyright (c) 2005 Martin Decky
# Copyright (c) 2007 Jakub Jermar
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# - The name of the author may not be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

## Common rules for building apps.
#

# Individual makefiles set:
#
#   USPACE_PREFIX  relative path to uspace/ directory
#   LIBS           libraries to link with (with relative path)
#   EXTRA_CFLAGS   additional flags to pass to C compiler
#   JOB            job file name (like appname.job)
#   OUTPUT         output binary name (like appname)
#   SOURCES        list of source files
#

DEPEND = Makefile.depend
DEPEND_PREV = $(DEPEND).prev

LIBC_PREFIX = $(USPACE_PREFIX)/lib/libc

JOB = $(OUTPUT).job

OBJECTS = $(addsuffix .o,$(basename $(SOURCES)))

-include $(USPACE_PREFIX)/../Makefile.common
-include $(USPACE_PREFIX)/../Makefile.config
include $(LIBC_PREFIX)/Makefile.toolchain

CFLAGS += $(EXTRA_CFLAGS)

.PHONY: all build clean

all: \
    $(LIBC_PREFIX)/../../../version \
    $(LIBC_PREFIX)/../../../Makefile.common \
    $(LIBC_PREFIX)/../../../Makefile.config \
    $(LIBC_PREFIX)/../../../config.h \
    $(LIBS) \
    \
    $(OUTPUT) \
    $(EXTRA_OUTPUT)
	-[ -f $(DEPEND) ] && mv -f $(DEPEND) $(DEPEND_PREV)

clean:
	rm -f $(DEPEND) $(DEPEND_PREV) $(JOB) $(OUTPUT) $(EXTRA_OUTPUT) $(EXTRA_CLEAN)
	find . -name '*.o' -follow -exec rm \{\} \;

build:

-include $(DEPEND)

$(OUTPUT): $(OBJECTS)
	$(AR) rc $@ $(OBJECTS)

%.o: %.S $(DEPEND)
	$(CC) $(DEFS) $(AFLAGS) $(CFLAGS) -D__ASM__ -c $< -o $@
ifeq ($(PRECHECK),y)
	$(JOBFILE) $(JOB) $< $@ as asm/preproc $(DEFS) $(AFLAGS) $(CFLAGS) -D__ASM__
endif

%.o: %.s $(DEPEND)
	$(AS) $(AFLAGS) $< -o $@
ifeq ($(PRECHECK),y)
	$(JOBFILE) $(JOB) $< $@ as asm $(AFLAGS)
endif

%.o: %.c $(DEPEND)
	$(CC) $(DEFS) $(CFLAGS) -c $< -o $@
ifeq ($(PRECHECK),y)
	$(JOBFILE) $(JOB) $< $@ cc core $(DEFS) $(CFLAGS)
endif

$(DEPEND): $(PRE_DEPEND)
	makedepend -f - -- $(DEPEND_DEFS) $(CFLAGS) -- $(SOURCES) > $@ 2> /dev/null
	-[ -f $(DEPEND_PREV) ] && diff -q $(DEPEND_PREV) $@ && mv -f $(DEPEND_PREV) $@
