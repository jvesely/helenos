#
# Copyright (c) 2006 Martin Decky
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# - The name of the author may not be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

.PHONY: all build_dist clean

include Makefile.common

GRUB2 = grub
STAGE2 = $(GRUB2)/i386-pc/eltorito.img
STAGE2_IN = boot/$(STAGE2)

all: $(BOOT_OUTPUT)

$(BOOT_OUTPUT): build_dist
	mkisofs -J -r -input-charset utf-8 -b $(STAGE2_IN) -no-emul-boot -boot-load-size 64 -boot-info-table -o $@ $(DISTROOT)/

build_dist: clean
	mkdir -p $(DISTROOT)/boot
	cp -r $(GRUB2) $(DISTROOT)/boot
	for module in $(COMPONENTS) ; do \
		cp "$$module" $(DISTROOT)/boot/ ; \
	done
	
	echo "set default=0" > $(DISTROOT)/boot/grub/i386-pc/grub.cfg
	echo "set timeout=10" >> $(DISTROOT)/boot/grub/i386-pc/grub.cfg
	echo "" >> $(DISTROOT)/boot/grub/i386-pc/grub.cfg
	
	echo "menuentry 'HelenOS $(RELEASE)' --class helenos --class os {" >> $(DISTROOT)/boot/grub/i386-pc/grub.cfg
	echo "	set root='(cd)'" >> $(DISTROOT)/boot/grub/i386-pc/grub.cfg
	
	for module in $(MODULES) ; do \
		echo "" >> $(DISTROOT)/boot/grub/i386-pc/grub.cfg ; \
		echo "	echo 'Loading $$module'" >> $(DISTROOT)/boot/grub/i386-pc/grub.cfg ; \
		if [ "$$module" = "kernel.bin" ] ; then \
			echo "	multiboot /boot/$$module" >> $(DISTROOT)/boot/grub/i386-pc/grub.cfg ; \
		else \
			echo "	module /boot/$$module" >> $(DISTROOT)/boot/grub/i386-pc/grub.cfg ; \
		fi \
	done
	
	echo "}" >> $(DISTROOT)/boot/grub/i386-pc/grub.cfg

clean:
	rm -fr $(DISTROOT)
