[/uspace/lib/libc/fnc.devmap_get_phone] ;
!ns.ipc_m_connect_me_to /* vfs */ ;
[/uspace/lib/libfs/fnc.fs_register] ;
(
	?fs.ipc_m_connect_me_to ;
	(
		?fs.mounted {
			?fs.ipc_m_data_write /* mount options */
		} +
		
		?fs.lookup {
			tentative {
				[/uspace/lib/libc/fnc.devmap_device_get_handle] ;
				tentative {
					[/uspace/lib/libc/fnc.devmap_device_connect]
				}
			}
		} +
		
		?fs.open_node {
			tentative {
				[/uspace/lib/libc/fnc.devmap_device_connect]
			}
		} +
		
		?fs.read {
			tentative {
				?fs.ipc_m_data_read /* payload */ {
					!device.read {
						!device.ipc_m_data_read /* forward */
					}
				} +
				(
					[/uspace/lib/libc/fnc.devmap_device_get_count] ;
					[/uspace/lib/libc/fnc.devmap_device_get_devices]
				)
			}
		} +
		
		?fs.write {
			tentative {
				?fs.ipc_m_data_write /* payload */ {
					!device.write {
						!device.ipc_m_data_write /* forward */
					}
				}
			}
		} +
		
		?fs.stat {
			?fs.ipc_m_data_read /* struct data */
		} +
		
		?fs.close {
			!device.ipc_m_phone_hungup
		} +
		
		?fs.mount +
		?fs.truncate +
		?fs.destroy +
		?fs.sync
	)* ;
	?fs.ipc_m_phone_hungup
)* ;
!vfs.ipc_m_phone_hungup
